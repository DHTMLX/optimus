{"code":"export class View {\r\n    constructor(app, params) {\r\n        this.app = app;\r\n        this.params = params || {};\r\n        this._views = new Map();\r\n        this._events = [];\r\n    }\r\n    on(obj, name, handler) {\r\n        if (arguments.length === 2) {\r\n            handler = name;\r\n            ;\r\n            name = obj;\r\n            obj = this.app;\r\n        }\r\n        const holder = obj;\r\n        const events = holder.events ? holder.events : obj;\r\n        const state = { id: events.on(name, handler), obj: events };\r\n        this._events.push(state);\r\n        return state;\r\n    }\r\n    fire(name, data) {\r\n        return this.app.fire(name, data);\r\n    }\r\n    _toCell(name) {\r\n        if (!name) {\r\n            name = \"content\";\r\n        }\r\n        if (typeof name === \"string\") {\r\n            return this.root.cell(name);\r\n        }\r\n        else {\r\n            return name(this.root);\r\n        }\r\n    }\r\n    show(cell, view, params) {\r\n        const target = (typeof cell === \"string\") ? this._toCell(cell) : cell;\r\n        params = params || {};\r\n        const old = this._views.get(target);\r\n        if (old) {\r\n            old.destroy();\r\n        }\r\n        const now = new view(this.app, params);\r\n        this._views.set(target, now);\r\n        const subroot = now.init();\r\n        now.root = subroot;\r\n        if (target) {\r\n            target.attach(subroot);\r\n        }\r\n        now.ready();\r\n    }\r\n    init() {\r\n        return null;\r\n    }\r\n    ready() {\r\n        /* do nothing */\r\n    }\r\n    destroy() {\r\n        this._events.forEach(a => {\r\n            a.obj.detach(a.id);\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=View.js.map","map":"{\"version\":3,\"file\":\"View.js\",\"sourceRoot\":\"\",\"sources\":[\"../../sources/View.ts\"],\"names\":[],\"mappings\":\"AAcA,MAAM,OAAO,IAAI;IAUhB,YAAY,GAAS,EAAE,MAAe;QACrC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;QAE3B,IAAI,CAAC,MAAM,GAAG,IAAI,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACnB,CAAC;IAED,EAAE,CAAC,GAAsC,EAAE,IAAY,EAAE,OAAyB;QACjF,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAC;YAC1B,OAAO,GAAI,IAAgC,CAAC;YAAA,CAAC;YAC7C,IAAI,GAAI,GAAqB,CAAC;YAC9B,GAAG,GAAG,IAAI,CAAC,GAAG,CAAA;SACd;QAED,MAAM,MAAM,GAAG,GAAyB,CAAC;QACzC,MAAM,MAAM,GAAiB,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,GAAmB,CAAC;QAEjF,MAAM,KAAK,GAAG,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE,OAAO,CAAC,EAAE,GAAG,EAAC,MAAM,EAAE,CAAC;QAC3D,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzB,OAAO,KAAK,CAAC;IACd,CAAC;IAED,IAAI,CAAC,IAAI,EAAE,IAAI;QACd,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAClC,CAAC;IAED,OAAO,CAAC,IAA6B;QACpC,IAAI,CAAC,IAAI,EAAE;YACV,IAAI,GAAG,SAAS,CAAC;SACjB;QAED,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;YAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC5B;aAAM;YACN,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACvB;IACF,CAAC;IAED,IAAI,CAAC,IAAiB,EAAE,IAAiB,EAAE,MAAc;QACxD,MAAM,MAAM,GAAG,CAAC,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACtE,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;QACtB,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpC,IAAI,GAAG,EAAE;YACR,GAAG,CAAC,OAAO,EAAE,CAAC;SACd;QAED,MAAM,GAAG,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QACvC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QAE7B,MAAM,OAAO,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;QAE1B,GAAW,CAAC,IAAI,GAAG,OAAO,CAAC;QAE5B,IAAI,MAAM,EAAC;YACV,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SACvB;QAED,GAAG,CAAC,KAAK,EAAE,CAAC;IACb,CAAC;IAED,IAAI;QACH,OAAO,IAAI,CAAC;IACb,CAAC;IACD,KAAK;QACJ,gBAAgB;IACjB,CAAC;IACD,OAAO;QACN,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YACxB,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC;IACJ,CAAC;CACD\"}","dts":{"name":"/home/maksim/work/dhtmlx/optimus2/optimus/dist/types/View.d.ts","writeByteOrderMark":false,"text":"import { IApp, ICell, IEventSource, IEventSourceHolder, IParams, ITargetLocator, IView, IViewEventSource, IViewFactory } from \"./types\";\r\nexport declare class View implements IView, IViewEventSource {\r\n    protected app: IApp;\r\n    protected cell: ICell;\r\n    protected params: IParams;\r\n    protected root: ICell;\r\n    private _routes;\r\n    private _views;\r\n    private _events;\r\n    constructor(app: IApp, params: IParams);\r\n    on(obj: IEventSource | IEventSourceHolder, name: string, handler: CallableFunction): any;\r\n    fire(name: any, data: any): any;\r\n    _toCell(name: string | ITargetLocator): ICell;\r\n    show(cell: string | ICell, view: IViewFactory, params: IParams): void;\r\n    init(): ICell;\r\n    ready(): void;\r\n    destroy(): void;\r\n}\r\n"}}
